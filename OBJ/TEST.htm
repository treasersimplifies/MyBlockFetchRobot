<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OBJ\TEST.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OBJ\TEST.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Sat May 06 17:38:26 2017
<BR><P>
<H3>Maximum Stack Usage =        380 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
usmart_cmd_rec &rArr; usmart_get_fparam &rArr; usmart_str2num &rArr; usmart_pow
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[99]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[14]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">NMI_Handler</a><BR>
 <LI><a href="#[15]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">HardFault_Handler</a><BR>
 <LI><a href="#[16]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">MemManage_Handler</a><BR>
 <LI><a href="#[17]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">BusFault_Handler</a><BR>
 <LI><a href="#[18]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">UsageFault_Handler</a><BR>
 <LI><a href="#[19]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">SVC_Handler</a><BR>
 <LI><a href="#[1a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">DebugMon_Handler</a><BR>
 <LI><a href="#[1b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">SysTick_Handler</a><BR>
 <LI><a href="#[2f]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2f]">ADC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[17]">BusFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[31]">CAN1_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[32]">CAN1_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[33]">CAN1_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[30]">CAN1_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5d]">CAN2_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5e]">CAN2_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5f]">CAN2_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5c]">CAN2_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6c]">CRYP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6b]">DCMI_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[28]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[29]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2a]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2b]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2c]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2d]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2e]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4c]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[55]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[56]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[57]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[58]">DMA2_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[59]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[61]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[62]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[63]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1a]">DebugMon_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5a]">ETH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5b]">ETH_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[23]">EXTI0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[45]">EXTI15_10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[24]">EXTI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[25]">EXTI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[26]">EXTI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[27]">EXTI4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[34]">EXTI9_5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[21]">FLASH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6e]">FPU_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4d]">FSMC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6]">GPS_Test</a> from gps.o(i.GPS_Test) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[6d]">HASH_RNG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[15]">HardFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3d]">I2C1_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3c]">I2C1_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3f]">I2C2_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3e]">I2C2_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[66]">I2C3_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[65]">I2C3_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[16]">MemManage_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[14]">NMI_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[60]">OTG_FS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[47]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[68]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[67]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6a]">OTG_HS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[69]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1e]">PVD_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1b]">PendSV_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[22]">RCC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[46]">RTC_Alarm_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[20]">RTC_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[13]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4e]">SDIO_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[40]">SPI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[41]">SPI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[50]">SPI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[19]">SVC_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1c]">SysTick_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1f]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[35]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[38]">TIM1_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[37]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[36]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[39]">TIM2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3a]">TIM3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3b]">TIM4_IRQHandler</a> from usmart.o(i.TIM4_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4f]">TIM5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[53]">TIM6_DAC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[54]">TIM7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[48]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4b]">TIM8_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4a]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[49]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[51]">UART4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[52]">UART5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[42]">USART1_IRQHandler</a> from usart.o(i.USART1_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[43]">USART2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[44]">USART3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[64]">USART6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[18]">UsageFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1d]">WWDG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[72]">__main</a> from __main.o(!!!main) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[71]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[4]">delay_ms</a> from delay.o(i.delay_ms) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[5]">delay_us</a> from delay.o(i.delay_us) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[70]">fputc</a> from usart.o(i.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[d]">go_delta_b</a> from engines.o(i.go_delta_b) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[b]">go_delta_f</a> from engines.o(i.go_delta_f) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[e]">go_delta_l</a> from engines.o(i.go_delta_l) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[c]">go_delta_r</a> from engines.o(i.go_delta_r) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[8]">gob</a> from engines.o(i.gob) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[7]">gof</a> from engines.o(i.gof) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[9]">gol</a> from engines.o(i.gol) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[a]">gor</a> from engines.o(i.gor) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[2]">read_addr</a> from usmart.o(i.read_addr) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[10]">usmart_cmd_rec</a> from usmart.o(i.usmart_cmd_rec) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[11]">usmart_exe</a> from usmart.o(i.usmart_exe) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[f]">usmart_init</a> from usmart.o(i.usmart_init) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[12]">usmart_scan</a> from usmart.o(i.usmart_scan) referenced 2 times from usmart_config.o(.data)
 <LI><a href="#[3]">write_addr</a> from usmart.o(i.write_addr) referenced 2 times from usmart_config.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[72]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[73]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[75]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[f1]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f2]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f3]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[f4]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[f5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[76]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[94]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[78]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[79]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[7b]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[7d]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[f6]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[84]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[f7]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[f8]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[fa]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[fb]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[fd]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[ff]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[100]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[101]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[102]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[103]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[104]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[105]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[106]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[107]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[108]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[109]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[10a]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[89]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[10b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[10c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[10d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[10e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[10f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[110]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[74]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[111]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[81]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[83]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[112]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[85]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; KEY_Scan &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[113]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[9a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[88]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[114]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[8a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[13]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[115]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_scan
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Test
</UL>

<P><STRONG><a name="[8f]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[90]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[8e]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[77]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[7a]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[116]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[117]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[95]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[7c]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[7e]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[8d]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[96]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[97]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[82]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[87]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[11c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[11d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>ENGINE1_cor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, engines.o(i.ENGINE1_cor))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_wise
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
</UL>

<P><STRONG><a name="[be]"></a>ENGINE1_res</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, engines.o(i.ENGINE1_res))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_left
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anti_clock
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[9f]"></a>ENGINE2_cor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, engines.o(i.ENGINE2_cor))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_left
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anti_clock
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
</UL>

<P><STRONG><a name="[c1]"></a>ENGINE2_res</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, engines.o(i.ENGINE2_res))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_wise
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[a0]"></a>ENGINE3_cor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, engines.o(i.ENGINE3_cor))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_left
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_wise
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
</UL>

<P><STRONG><a name="[bf]"></a>ENGINE3_res</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, engines.o(i.ENGINE3_res))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anti_clock
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[a1]"></a>ENGINE4_cor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, engines.o(i.ENGINE4_cor))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anti_clock
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
</UL>

<P><STRONG><a name="[c2]"></a>ENGINE4_res</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, engines.o(i.ENGINE4_res))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_left
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_wise
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[9b]"></a>ENGINES_Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, engines.o(i.ENGINES_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ENGINES_Init &rArr; PWM10111314_Init &rArr; PWM14_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM10111314_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>ENGINES_stop</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, engines.o(i.ENGINES_stop))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error2
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error2
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_72
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[b2]"></a>GPIO_AF_Set</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, sys.o(i.GPIO_AF_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM14_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM13_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM11_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM10_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM9_1_2_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM12_1_2_Init
</UL>

<P><STRONG><a name="[9d]"></a>GPIO_Set</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, sys.o(i.GPIO_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM14_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM13_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM11_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM10_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM9_1_2_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM12_1_2_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_gpsInit
</UL>

<P><STRONG><a name="[a3]"></a>GPS_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gps.o(i.GPS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPS_Init &rArr; IR_gpsInit &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_gpsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>GPS_Test</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gps.o(i.GPS_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GPS_Test &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[a6]"></a>IR_Behind</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gps.o(i.IR_Behind))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error2
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Test
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[a5]"></a>IR_Front</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gps.o(i.IR_Front))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error2
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Test
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[a8]"></a>IR_Left</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gps.o(i.IR_Left))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error2
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Test
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
</UL>

<P><STRONG><a name="[a7]"></a>IR_Right</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gps.o(i.IR_Right))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error2
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Test
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
</UL>

<P><STRONG><a name="[a4]"></a>IR_gpsInit</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, gps.o(i.IR_gpsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IR_gpsInit &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Init
</UL>

<P><STRONG><a name="[a9]"></a>KEY_Init</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, key.o(i.KEY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = KEY_Init &rArr; LED_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>KEY_Scan</STRONG> (Thumb, 2240 bytes, Stack size 24 bytes, key.o(i.KEY_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = KEY_Scan &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>LED_Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LED_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
</UL>

<P><STRONG><a name="[ac]"></a>MY_NVIC_Init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, sys.o(i.MY_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4_Init
</UL>

<P><STRONG><a name="[ad]"></a>MY_NVIC_PriorityGroupConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sys.o(i.MY_NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>

<P><STRONG><a name="[bb]"></a>MY_NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys.o(i.MY_NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
</UL>

<P><STRONG><a name="[9c]"></a>PWM10111314_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pwm10111314.o(i.PWM10111314_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PWM10111314_Init &rArr; PWM14_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM14_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM13_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM11_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM10_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_Init
</UL>

<P><STRONG><a name="[b1]"></a>PWM10_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, pwm10111314.o(i.PWM10_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PWM10_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM10111314_Init
</UL>

<P><STRONG><a name="[b0]"></a>PWM11_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, pwm10111314.o(i.PWM11_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PWM11_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM10111314_Init
</UL>

<P><STRONG><a name="[b3]"></a>PWM12_1_2_Init</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, pwm912.o(i.PWM12_1_2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PWM12_1_2_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_Init
</UL>

<P><STRONG><a name="[af]"></a>PWM13_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, pwm10111314.o(i.PWM13_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PWM13_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM10111314_Init
</UL>

<P><STRONG><a name="[ae]"></a>PWM14_Init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, pwm10111314.o(i.PWM14_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PWM14_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM10111314_Init
</UL>

<P><STRONG><a name="[b4]"></a>PWM9_1_2_Init</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, pwm912.o(i.PWM9_1_2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PWM9_1_2_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_Init
</UL>

<P><STRONG><a name="[a2]"></a>SERVO_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, pwm912.o(i.SERVO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SERVO_Init &rArr; PWM9_1_2_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM9_1_2_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM12_1_2_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_Init
</UL>

<P><STRONG><a name="[b6]"></a>ServoB_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pwm912.o(i.ServoB_Set))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[b5]"></a>ServoF_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pwm912.o(i.ServoF_Set))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[b7]"></a>ServoL_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pwm912.o(i.ServoL_Set))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[b8]"></a>ServoR_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pwm912.o(i.ServoR_Set))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[b9]"></a>Stm32_Clock_Init</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, sys.o(i.Stm32_Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Stm32_Clock_Init &rArr; Sys_Clock_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Clock_Set
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_SetVectorTable
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>Sys_Clock_Set</STRONG> (Thumb, 254 bytes, Stack size 20 bytes, sys.o(i.Sys_Clock_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Sys_Clock_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
</UL>

<P><STRONG><a name="[3b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usmart.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>Timer4_Init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usmart.o(i.Timer4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Timer4_Init &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_init
</UL>

<P><STRONG><a name="[42]"></a>USART1_IRQHandler</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, usart.o(i.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[8b]"></a>_sys_exit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[bd]"></a>anti_clock</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, engines.o(i.anti_clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = anti_clock
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_res
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_res
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
</UL>

<P><STRONG><a name="[c0]"></a>clock_wise</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, engines.o(i.clock_wise))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = clock_wise
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_res
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_res
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
</UL>

<P><STRONG><a name="[e0]"></a>delay_init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, delay.o(i.delay_init))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>delay_ms</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_xms
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_72
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>delay_us</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, delay.o(i.delay_us))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[c3]"></a>delay_xms</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, delay.o(i.delay_xms))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[70]"></a>fputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usart.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>go_delta_b</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, engines.o(i.go_delta_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_b &rArr; gof &rArr; head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_one
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[c5]"></a>go_delta_b_error</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, engines.o(i.go_delta_b_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_b_error &rArr; gof &rArr; head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_one
</UL>

<P><STRONG><a name="[b]"></a>go_delta_f</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, engines.o(i.go_delta_f))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_f &rArr; gof &rArr; head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_one
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[c7]"></a>go_delta_f_error</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, engines.o(i.go_delta_f_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_f_error &rArr; gof_error &rArr; head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_one
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_72
</UL>

<P><STRONG><a name="[c9]"></a>go_delta_f_error2</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, engines.o(i.go_delta_f_error2))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_f_error2 &rArr; gof_error2 &rArr; head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
</UL>

<P><STRONG><a name="[e]"></a>go_delta_l</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, engines.o(i.go_delta_l))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_l &rArr; gor &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_one
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[cb]"></a>go_delta_l_error</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, engines.o(i.go_delta_l_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_l_error &rArr; gor &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>

<P><STRONG><a name="[cd]"></a>go_delta_l_error2</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, engines.o(i.go_delta_l_error2))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_l_error2 &rArr; gor &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
</UL>

<P><STRONG><a name="[c]"></a>go_delta_r</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, engines.o(i.go_delta_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_r &rArr; gor &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_one
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[cf]"></a>go_delta_r_error</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, engines.o(i.go_delta_r_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_r_error &rArr; gor_error &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_72
</UL>

<P><STRONG><a name="[d1]"></a>go_delta_r_error2</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, engines.o(i.go_delta_r_error2))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_delta_r_error2 &rArr; gor_error2 &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
</UL>

<P><STRONG><a name="[d3]"></a>go_enemy_72</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, test.o(i.go_enemy_72))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_enemy_72 &rArr; go_delta_r_error &rArr; gor_error &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>

<P><STRONG><a name="[d5]"></a>go_enemy_73</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, test.o(i.go_enemy_73))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_enemy_73 &rArr; go_delta_r_error &rArr; gor_error &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>

<P><STRONG><a name="[d8]"></a>go_enemy_74</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, test.o(i.go_enemy_74))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_enemy_74 &rArr; go_delta_r_error2 &rArr; gor_error2 &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error2
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error2
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>

<P><STRONG><a name="[d9]"></a>go_one</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, test.o(i.go_one))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = go_one &rArr; go_delta_r &rArr; gor &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>

<P><STRONG><a name="[da]"></a>go_out</STRONG> (Thumb, 372 bytes, Stack size 0 bytes, test.o(i.go_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = go_out &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_left
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_wise
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anti_clock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_one
</UL>

<P><STRONG><a name="[8]"></a>gob</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gob))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gob &rArr; head_behind
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_right
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_left
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_res
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_res
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_res
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_res
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error2
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[c6]"></a>gob_error</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gob_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gob_error &rArr; head_behind
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_right
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_left
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_res
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_res
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_res
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_res
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
</UL>

<P><STRONG><a name="[7]"></a>gof</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gof))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gof &rArr; head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_right
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_left
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[c8]"></a>gof_error</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gof_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gof_error &rArr; head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_right
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_left
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
</UL>

<P><STRONG><a name="[ca]"></a>gof_error2</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gof_error2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gof_error2 &rArr; head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Front
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Behind
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_right
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_left
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error2
</UL>

<P><STRONG><a name="[9]"></a>gol</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gol))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gol &rArr; head_left
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_left
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_left
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_left
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_res
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_res
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[cc]"></a>gol_error</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gol_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gol_error &rArr; head_left
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_left
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_left
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_left
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_res
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_res
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
</UL>

<P><STRONG><a name="[ce]"></a>gol_error2</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gol_error2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gol_error2 &rArr; head_left
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_left
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_left
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_left
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_res
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_res
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error2
</UL>

<P><STRONG><a name="[a]"></a>gor</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gor))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gor &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_right
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_right
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_res
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_res
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error2
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[d0]"></a>gor_error</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gor_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gor_error &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_right
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_right
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_res
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_res
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
</UL>

<P><STRONG><a name="[d2]"></a>gor_error2</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, engines.o(i.gor_error2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gor_error2 &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_right
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Right
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IR_Left
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_front_right
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_behind_right
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_res
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_res
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error2
</UL>

<P><STRONG><a name="[d7]"></a>head_behind</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, engines.o(i.head_behind))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = head_behind
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_res
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_res
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_res
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_res
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[dc]"></a>head_behind_left</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, engines.o(i.head_behind_left))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[dd]"></a>head_behind_right</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, engines.o(i.head_behind_right))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob_error
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gob
</UL>

<P><STRONG><a name="[d6]"></a>head_front</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, engines.o(i.head_front))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = head_front
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
</UL>

<P><STRONG><a name="[de]"></a>head_front_left</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, engines.o(i.head_front_left))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
</UL>

<P><STRONG><a name="[df]"></a>head_front_right</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, engines.o(i.head_front_right))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error2
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gof
</UL>

<P><STRONG><a name="[db]"></a>head_left</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, engines.o(i.head_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = head_left
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_res
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_cor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_cor
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_res
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error2
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol_error
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gol
</UL>

<P><STRONG><a name="[d4]"></a>head_right</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, engines.o(i.head_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE4_cor
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE3_res
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE2_res
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINE1_cor
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_72
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error2
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor_error
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gor
</UL>

<P><STRONG><a name="[86]"></a>main</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, test.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = main &rArr; KEY_Scan &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stm32_Clock_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoR_Set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoL_Set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoF_Set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoB_Set
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_stop
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENGINES_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2]"></a>read_addr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usmart.o(i.read_addr))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[e2]"></a>running</STRONG> (Thumb, 1868 bytes, Stack size 16 bytes, test.o(i.running))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = running &rArr; go_delta_r_error &rArr; gor_error &rArr; head_right
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r_error
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_r
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_l
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f_error
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_f
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b_error
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_delta_b
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_out
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_one
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_74
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_73
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_enemy_72
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>uart_init</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, usart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uart_init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10]"></a>usmart_cmd_rec</STRONG> (Thumb, 170 bytes, Stack size 96 bytes, usmart.o(i.usmart_cmd_rec))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = usmart_cmd_rec &rArr; usmart_get_fparam &rArr; usmart_str2num &rArr; usmart_pow
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>usmart_exe</STRONG> (Thumb, 632 bytes, Stack size 128 bytes, usmart.o(i.usmart_exe))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = usmart_exe &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_parmpos
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_reset_runtime
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_runtime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[ea]"></a>usmart_get_aparm</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, usmart_str.o(i.usmart_get_aparm))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usmart_get_aparm
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[f0]"></a>usmart_get_cmdname</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usmart_str.o(i.usmart_get_cmdname))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usmart_get_cmdname
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[e3]"></a>usmart_get_fname</STRONG> (Thumb, 440 bytes, Stack size 72 bytes, usmart_str.o(i.usmart_get_fname))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = usmart_get_fname
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_search_nextc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
</UL>

<P><STRONG><a name="[e5]"></a>usmart_get_fparam</STRONG> (Thumb, 262 bytes, Stack size 240 bytes, usmart_str.o(i.usmart_get_fparam))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = usmart_get_fparam &rArr; usmart_str2num &rArr; usmart_pow
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strlen
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcopy
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_parmpos
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_aparm
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
</UL>

<P><STRONG><a name="[e6]"></a>usmart_get_parmpos</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_get_parmpos))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
</UL>

<P><STRONG><a name="[e8]"></a>usmart_get_runtime</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, usmart.o(i.usmart_get_runtime))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
</UL>

<P><STRONG><a name="[f]"></a>usmart_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usmart.o(i.usmart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usmart_init &rArr; Timer4_Init &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[ef]"></a>usmart_pow</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usmart_str.o(i.usmart_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usmart_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
</UL>

<P><STRONG><a name="[e7]"></a>usmart_reset_runtime</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usmart.o(i.usmart_reset_runtime))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_exe
</UL>

<P><STRONG><a name="[12]"></a>usmart_scan</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, usmart.o(i.usmart_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = usmart_scan &rArr; usmart_sys_cmd_exe &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[e9]"></a>usmart_search_nextc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_search_nextc))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
</UL>

<P><STRONG><a name="[eb]"></a>usmart_str2num</STRONG> (Thumb, 262 bytes, Stack size 36 bytes, usmart_str.o(i.usmart_str2num))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usmart_str2num &rArr; usmart_pow
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
</UL>

<P><STRONG><a name="[e4]"></a>usmart_strcmp</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_strcmp))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_sys_cmd_exe
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_cmd_rec
</UL>

<P><STRONG><a name="[ed]"></a>usmart_strcopy</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_strcopy))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
</UL>

<P><STRONG><a name="[ec]"></a>usmart_strlen</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usmart_str.o(i.usmart_strlen))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fparam
</UL>

<P><STRONG><a name="[ee]"></a>usmart_sys_cmd_exe</STRONG> (Thumb, 1570 bytes, Stack size 56 bytes, usmart.o(i.usmart_sys_cmd_exe))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = usmart_sys_cmd_exe &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_strcmp
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_str2num
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_fname
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_cmdname
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_get_aparm
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usmart_scan
</UL>

<P><STRONG><a name="[3]"></a>write_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usmart.o(i.write_addr))
<BR>[Address Reference Count : 1]<UL><LI> usmart_config.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[11e]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[11f]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[71]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
